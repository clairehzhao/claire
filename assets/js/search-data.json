{
  
    
        "post0": {
            "title": "1.1 Collaboration",
            "content": "Learning Objectives . CRD-1.A: Explain how computing innovations are improved through collaboration . CRD-1.B: Explain how computing innovations are developed by groups of people . CRD-1.C: Demonstrate effective interpersonal skills during collaboration . Video Notes . Facebook has areas in their buildings that allow people to come together and collaborate reflects the diverstiy of talents and perspectives of those who designed it | . | A computing innovation includes a program as an integral part of its function | A computing innovation can be physical, nonphysical computing softwares, or a nonphysical computing concept. | Collaboration that includes diverse perspectives helps avoid bias in the development of computing innovations ex. Super Mario Brothers 2 vs. Super Mario Brothers 3 | . | Interpersonal skills learned through collaboration include: communitation | consensus building | conflict resolution | negotiation | . | Pair Programming two programmers work together as a pair. One as the driver (writes program code), the other as the navigator (reviews each line of code as it is typed in) | switch back and forth | . | Think-Pair-Share students think through a problem alone, pair with a partner to share ideas, and then share results with the class | thinking alone are independent | when pairing up can learn more about the topic | . | Leave comments in code communicate to your parents | communicate to yourself | acknowledge code segments used from other sources | acknowledge media used from other sources | differentiate what you and you partner(s) did | clarify the funcionality of your cold | . | How to collaborate repl.it | GitHub | shared doc/folder | give each other feedback | . | .",
            "url": "https://clairehzhao.github.io/claire/week4/markdown/2022/09/16/bigidea1colaboration.html",
            "relUrl": "/week4/markdown/2022/09/16/bigidea1colaboration.html",
            "date": " • Sep 16, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Psychology and the Good Life",
            "content": "Video Notes . yale university professor | yale students are filled with lots of stress | little times at yale to do the little things that bring them joy | this is not just at yale, this is at college campuses all around the country | 40% percent of college students present more than the average level of stress | 1/3 of students are so depressed it is difficult the function | over 40% are hopeless | just under 50% of students are feeling an overwhelming amount of anxiety | over 80% of the students are feeling overwhelmed by all the things they are supposed to be doing all the time | need a better culture and enviromnment in school | not just being realized in the colleges | 1 out of every 4 students took this class in yale | showing that there was a need for this class | in class they learned you are not stuck in the well-being that you are in right now | many people realize that bad things that happen in their life cause them to become happier, they learn to live life fully now that something horrible has happened to them | it takes a lot of effort and permanent changes to become happier | G.I. Joe fallacy that knowing is just half the battle, we have to put in the effort and work | recognizing that your mind is lying to you about what it means to be happy | people think that money/salary will make you happier | those who think that money is needed to be happy, tend to be the ones with worse well-being | . | things that people can do to be happier: prioritize time for social connection | human connection causes more positivity | helping others: spending any amount of money on others | make time for gratitude every single day: private and public | healthy practices: exercise and sleep | taking time to be in the present moment | beome wealthy in TIME not money | . | . Gratitude List . three day weekend | my family | my friends | playing field hockey | figure skating | meeting new people in school | comfy pjs | colder weather | hiking trails nearby | . Goals: . spend more time helping others | try and get moe sleep | welathy in time | focus less on money | prioritize social interations more | .",
            "url": "https://clairehzhao.github.io/claire/week4/markdown/2022/09/15/pyschologyandthegoodlifevideo.html",
            "relUrl": "/week4/markdown/2022/09/15/pyschologyandthegoodlifevideo.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "App Lab Program",
            "content": "Quiz Creation . Taylor Swift Quiz . Link to creation! . Planning: Growing up I loved taking Buzzfeed quizzes about topics that I loved and enjoyed, this inspired me to create this quiz. I wanted this quiz to be a quiz about something that I loved so I chose Taylor Swift. I had never used code.org before so I wanted to experiment around and have all the questions have different formats. I also knew that I wanted to add lots of pictures into the quiz. I wanted to be able to generate a score at the end, so I decided to do a trivia quiz. . Function: This quiz has 4 questions that will test the users knowledge on facts about Taylor Swift. As the user answers questions, they will be notified if the answer is correct or incorrect. At the end of the quiz they will be given a score on how they did on the quiz. . How it was created: . set variables for the score to 0 to have an accurate score calculated at the end of the quiz | score is calculated by the number of correct answers and the number of attempts when answering questions | when user gets the answer correct 1 is added to the score and the number of tries | when user gets the answer wrong 1 is added to the number of tries but the score stays the same | the quiz starts at a home page with a start button that leads to the first question | first question has a sliding bar with set values that determine if the answer is correct. user must slide the bar to the correct photo to answer the question. when the bar is at the correct point it leads the user to the correct answer screen and is guided to the next question. when the answer is incorrect, the user is lead to an incorrect answer screen, and asked to try again. | the second question has photos with buttons that can be clicked to answer the question. just like the first question when the answer is correct, there is a correct answer page and when the answer is incorrect, there is a incorrect answer page. | the third question uses a drop down bar to answer the question. there are 4 options and the user clicks on one of options to answer the question. the user will be lead to either an incorrect or correct answer page when they answer the question. | the final question is a text input question. the user is asked to answer a question by typing in an answer. after typing the answer the user will push enter on their keyboard and will be lead an incorrect or correct answer page. | after the user has completed the quiz, they are lead to the final page. in this final page there is a button that can be clicked to reveal their final score. the score is generated by the function that was created in the beginning. | . Successes: . it was easy to navigate the platform so the coding portion of the project was fairly easy to catch on to | the quiz is clear and easy to understand | learned how to use variables to help calculate score at the end of quiz | design portion of the quiz is neat and pretty | . Struggles: . there are a lot of different id’s so it is important to label the images, text boxes, buttons, and pages so they don’t get confusing | the code was often repetitive and there wasn’t a way to copy and paste the code | .",
            "url": "https://clairehzhao.github.io/claire/week3/markdown/2022/09/10/applab.html",
            "relUrl": "/week3/markdown/2022/09/10/applab.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Remote Theme Change",
            "content": ". Theme Change Findings . Front Page . color theme changed | blog links are only on right side of the page | links and words overlapping each other | hard to read Individual Posts . | code only takes up half of the page | code and words overlap | blog site title still in actual post | images will not load | .",
            "url": "https://clairehzhao.github.io/claire/markdown/week2/2022/09/04/themechangeanalyze.html",
            "relUrl": "/markdown/week2/2022/09/04/themechangeanalyze.html",
            "date": " • Sep 4, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Info Data Base",
            "content": "The database InfoDb has information on two schools. Each including their name, principal, year the school was built, school level, number of students, number of teachers, zip code, and the school colors. Using the school name, this information will be found through through the dictionary. . InfoDb = [] # Append to List a Dictionary of key/value related to the school and information InfoDb.append({ &quot;SchoolName&quot;: &quot;Del Norte High School&quot;, &quot;Principal&quot;: &quot;Bryan Schultz&quot;, &quot;Founded&quot;: &quot;2009&quot;, &quot;SchoolLevel&quot;: &quot;Highschool&quot;, &quot;StudentNumber&quot;: &quot;2585&quot;, &quot;TeacherNumber&quot;: &quot;92&quot;, &quot;Zipcode&quot;: &quot;92127&quot;, &quot;SchoolColors&quot;: [&quot;Navy Blue, Forest Green, Vegas Gold&quot;] }) # Append to List a 2nd Dictionary with key/values InfoDb.append({ &quot;SchoolName&quot;: &quot;Westview High School&quot;, &quot;Principal&quot;: &quot;Ernie Remillard&quot;, &quot;Founded&quot;: &quot;2002&quot;, &quot;SchoolLevel&quot;: &quot;Highschool&quot;, &quot;StudentNumber&quot;: &quot;2376&quot;, &quot;TeacherNumber&quot;: &quot;85&quot;, &quot;Zipcode&quot;: &quot;92129&quot;, &quot;SchoolColors&quot;: [&quot;Black, White, Vegas Gold&quot;] }) # Print Data Structure print(InfoDb) . [{&#39;SchoolName&#39;: &#39;Del Norte High School&#39;, &#39;Principal&#39;: &#39;Bryan Schultz&#39;, &#39;Founded&#39;: &#39;2009&#39;, &#39;SchoolLevel&#39;: &#39;Highschool&#39;, &#39;StudentNumber&#39;: &#39;2585&#39;, &#39;TeacherNumber&#39;: &#39;92&#39;, &#39;Zipcode&#39;: &#39;92127&#39;, &#39;SchoolColors&#39;: [&#39;Navy Blue, Forest Green, Vegas Gold&#39;]}, {&#39;SchoolName&#39;: &#39;Westview High School&#39;, &#39;Principal&#39;: &#39;Ernie Remillard&#39;, &#39;Founded&#39;: &#39;2002&#39;, &#39;SchoolLevel&#39;: &#39;Highschool&#39;, &#39;StudentNumber&#39;: &#39;2376&#39;, &#39;TeacherNumber&#39;: &#39;85&#39;, &#39;Zipcode&#39;: &#39;92129&#39;, &#39;SchoolColors&#39;: [&#39;Black, White, Vegas Gold&#39;]}] . In the code above, both schools information was saved in the dictionary. . def print_data(d_school): print(d_school[&quot;SchoolName&quot;]) print(&quot; t&quot;, &quot;Principal:&quot;, d_school[&quot;Principal&quot;]) print(&quot; t&quot;, &quot;Founded:&quot;, d_school[&quot;Founded&quot;]) print(&quot; t&quot;, &quot;School Type:&quot;, d_school[&quot;SchoolLevel&quot;]) print(&quot; t&quot;, &quot;Number of Students:&quot;, d_school[&quot;StudentNumber&quot;]) print(&quot; t&quot;, &quot;Number of Teachers:&quot;, d_school[&quot;TeacherNumber&quot;]) print(&quot; t&quot;, &quot;ZipCode:&quot;, d_school[&quot;Zipcode&quot;]) print(&quot; t&quot;, &quot;School Colors:&quot;, d_school[&quot;SchoolColors&quot;]) # for loop algorithm iterates on length of InfoDb def for_loop(): for record in InfoDb: print_data(record) for_loop() . Del Norte High School Principal: Bryan Schultz Founded: 2009 School Type: Highschool Number of Students: 2585 Number of Teachers: 92 ZipCode: 92127 School Colors: [&#39;Navy Blue, Forest Green, Vegas Gold&#39;] Westview High School Principal: Ernie Remillard Founded: 2002 School Type: Highschool Number of Students: 2376 Number of Teachers: 85 ZipCode: 92129 School Colors: [&#39;Black, White, Vegas Gold&#39;] . In the code above, the for loop was able to iterate over the InfoDb to find the information of the school and print the information. . def while_loop(): i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . Del Norte High School Principal: Bryan Schultz Founded: 2009 School Type: Highschool Number of Students: 2585 Number of Teachers: 92 ZipCode: 92127 School Colors: [&#39;Navy Blue, Forest Green, Vegas Gold&#39;] Westview High School Principal: Ernie Remillard Founded: 2002 School Type: Highschool Number of Students: 2376 Number of Teachers: 85 ZipCode: 92129 School Colors: [&#39;Black, White, Vegas Gold&#39;] . The while loop above printed the school&#39;s information as long as the variable being used is less than the length of the InfoDb. . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return recursive_loop(0) . Del Norte High School Principal: Bryan Schultz Founded: 2009 School Type: Highschool Number of Students: 2585 Number of Teachers: 92 ZipCode: 92127 School Colors: [&#39;Navy Blue, Forest Green, Vegas Gold&#39;] Westview High School Principal: Ernie Remillard Founded: 2002 School Type: Highschool Number of Students: 2376 Number of Teachers: 85 ZipCode: 92129 School Colors: [&#39;Black, White, Vegas Gold&#39;] . The code above was able to print the school information by using a recursive loop, which calls itself repeatedly. . input_schoolname = input(&quot;Enter which school you would like to search for:&quot;) input_information = input(&quot;Enter what you are searching for: ex. Principal, SchoolName, Founded, SchoolLevel, StudentNumber, TeacherNumber, Zipcode, or SchoolColors&quot;) # define function to print records def search_school(): for info in InfoDb: found_school = 0 found_info = 0 found_key = &quot;&quot; for key in info: if (found_school == 0): if info[key] == input_schoolname: found_school = 1 # print(&quot;School is found&quot; + str(found_school) + &quot; n&quot;) if (found_info == 0): if key == input_information: found_key = key found_info = 1 # print(&quot;key is &quot; + key + &quot; n&quot;) if (found_school == 1 and found_info == 1): print(&quot;School Name: &quot; + input_schoolname) print(&quot;Information: &quot; + found_key + &quot;: &quot; ) print(info[found_key]) return if (found_school == 0 or found_info == 0): print(&quot;Information not found.&quot;) search_school() . School Name: Westview High School Information: Founded: 2002 . Using a for loop the code was able to take information from the dictionary and compare it with the user input. By doing so, the user can choose which piece of information it would like to view. . input_schoolname = input(&quot;Enter which school you would like to search for:&quot;) input_information = input(&quot;Enter what you are searching for: ex. Principal, SchoolName, Founded, SchoolLevel, StudentNumber, TeacherNumber, Zipcode, or SchoolColors&quot;) # define function to print records def find_school(): found_school = False found_info = False i = 0 while (found_school == False or found_info == False): found_key = &quot;&quot; info = InfoDb[i] i += 1 for key in info: if (found_school == 0): if info[key] == input_schoolname: found_school = True # print(&quot;School is found&quot; + str(found_school) + &quot; n&quot;) if (found_info == 0): if key == input_information: found_key = key found_info = True # print(&quot;key is &quot; + key + &quot; n&quot;) if (found_school == True and found_info == True): print(&quot;School Name: &quot; + input_schoolname) print(&quot;Information: &quot; + found_key + &quot;: &quot; ) print(info[found_key]) if (found_school == False or found_info == False): print(&quot;Information not found.&quot;) find_school() . School Name: Del Norte High School Information: SchoolColors: [&#39;Navy Blue, Forest Green, Vegas Gold&#39;] . Doing something similar to the for loop, a while loop was used. The while loop was able to find the information the user wanted as long as the conditions were true. .",
            "url": "https://clairehzhao.github.io/claire/python/markdown/week2/jupyter/2022/09/04/listsdictionaryiteration.html",
            "relUrl": "/python/markdown/week2/jupyter/2022/09/04/listsdictionaryiteration.html",
            "date": " • Sep 4, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "CSP Terms",
            "content": "Push/Pull - to send/recieve code to and from GitHub . Print - input that prints a specific method on the screen . Markdown - syntax used to format plain text . Define - defining a function or method . If statement - used for conditional execution . Front Matter - section of code that is on top of files with key-values . Variable - word used as a container to hold information . String - series of characters . Boolean - value that is either true or false .",
            "url": "https://clairehzhao.github.io/claire/markdown/week1/2022/08/27/cspterms.html",
            "relUrl": "/markdown/week1/2022/08/27/cspterms.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Bash Installation Check",
            "content": "%%bash #Check version of Conda conda_version=$(conda -V 2&gt;&amp;1 | sed -n &#39;;s/.*conda (.* )/ 1/p;&#39;) #conda_version=$(conda -V 2&gt;&amp;1 | sed -n &#39;;s/.*conda &quot; (.* ) . (.* ) ..*&quot;.*/ 1 2/p;&#39;) #conda_version=&#39;conda -V | sed -n &#39;;s/conda &quot; (.* ) . (.* ) ..*&quot;.*/ 1 2/p;&#39; #echo $conda_version #Check version of Python python_version=`python -c &#39;import sys; version=sys.version_info[:3]; print(&quot;{0}.{1}.{2}&quot;.format(*version))&#39;` #Print using conditional statement if [ $conda_version &gt; &quot;0&quot; ]; then echo &quot;Conda version: &quot;$conda_version else echo &quot;Conda not installed&quot; fi if [ $python_version &gt; &quot;0&quot; ]; then echo &quot;Python version: &quot;$python_version else echo &quot;Python not installed&quot; fi . Conda version: 4.14.0 Python version: 3.9.12 .",
            "url": "https://clairehzhao.github.io/claire/bash/week1/jupyter/2022/08/27/bashinstallcheck.html",
            "relUrl": "/bash/week1/jupyter/2022/08/27/bashinstallcheck.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Python Vocab Quiz",
            "content": "score = 0 questions = 4 def q_a(q, a): answer = input(q) score = 0 if answer == a: print(&quot;Good job! That is correct!&quot;) score = 1 else: print(&quot;Nice try! The answer is &quot; + a + &quot;.&quot;) return score #intro: name = input(&quot;Enter your name:&quot;) print(&quot;Hey! &quot; + name) ready = input(&quot;This quiz will have &quot; + str(questions) + &quot; questions that will test your abilities to identify python terms. Are you ready to start this quiz? Answer yes or no.&quot;) if ready == &quot;yes&quot;: print(&quot;Let&#39;s get started!&quot;) else: print(&quot;YOU GOT THIS!&quot;) #question 1: score = score + q_a(&quot;Question 1: What term defines a function or method?&quot;, &quot;def&quot;) #question 2: score = score + q_a(&quot;Question 2: What is a series of characters?&quot;, &quot;string&quot;) #question 3: score = score + q_a(&quot;Question 3: What input prints specified messages on the screen?&quot;, &quot;print&quot;) #question 4: score = score + q_a(&quot;Question 4: What is a value that is either true or false?&quot;, &quot;boolean&quot;) #ending score if score &gt;= 3: print(&quot;Congratulations! You completed this quiz with an amazing score! You scored a: {}/4&quot; .format(score)) else: print(&quot;Congratulations! You completed the quiz. Your score is a: {}/4&quot; .format(score)) . Hey! Claire Let&#39;s get started! Good job! That is correct! Good job! That is correct! Good job! That is correct! Nice try! The answer is boolean. Congratulations! You completed this quiz with an amazing score! You scored a: 3/4 .",
            "url": "https://clairehzhao.github.io/claire/python/week1/jupyter/2022/08/26/pythonquiz.html",
            "relUrl": "/python/week1/jupyter/2022/08/26/pythonquiz.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Daily Blog",
            "content": "Day at Del Norte High School . First Period: . AP Calculus AB . Starts at 8:35 am | Currently learning limits | Reviewing functions | About 15 questions for homework a day | Quiz on limits this Tuesday (8/30) | . In class: . Warm Up | Check homework | Go over warm up and homework | Notes on new material | Homework time | . Second Period: . Honors Humanities . Starts at 9:49 am | Learning about the definition of art | Working on annotating and reading challenging texts | Notebook check turned in on Friday | . Break . 10 minute break . Hangout with friends! | . Third period: . AP Biology . Starts at 11:13 | First unit is unit 7 | Learning about evolution | No homework in class, just spend 30 minutes taking notes | Using videos, concept maps, and the textbook to take notes | Notes not turned in | Learning about Galapagos Finches | Working on projects in a group | . Lunch: . 30 minute lunch . Go to lunch tutorial if needed | Having fun with friends! | . Fourth Period: . AP CSP . Starts at 12:57 | Using GitHub, VSCode, Markdown, and Python | Learning to use GitHub | Learning to use VSCode | Learning to use python to make a quiz | Learning to use markdown to make blogs about the day and take notes | . Office Hours: . 25 minutes . Ask teachers questions | Work on homework | . Fifth Period: . Offroll! . Starts at 2:36 | Work on homework with friends! | . Field Hockey . 4-6pm | Playing Field Hockey with my amazing team | .",
            "url": "https://clairehzhao.github.io/claire/markdown/week1/2022/08/24/daily-blog.html",
            "relUrl": "/markdown/week1/2022/08/24/daily-blog.html",
            "date": " • Aug 24, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Markdown Post",
            "content": "Markdown can be used to format text when writing. . Some feautures include: . bold text | italicized text | emojis 😊 | color color color color | different fonts | striketrhough | images | .",
            "url": "https://clairehzhao.github.io/claire/markdown/week0/2022/08/20/markdown-blog.html",
            "relUrl": "/markdown/week0/2022/08/20/markdown-blog.html",
            "date": " • Aug 20, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Hey World - Python",
            "content": "Code . msg = &quot;Hey World&quot; print (msg) . Hey World .",
            "url": "https://clairehzhao.github.io/claire/week0/jupyter/python/2022/08/20/First-Post.html",
            "relUrl": "/week0/jupyter/python/2022/08/20/First-Post.html",
            "date": " • Aug 20, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Hey! My name is Claire Zhao, and I am a sophomore at Del Norte High School. .",
          "url": "https://clairehzhao.github.io/claire/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "Progress",
          "content": "Week # Link Learning . Week #0 | Tools Setup | Learned to create personal fastpages, created markdown post, created jupyter notebook post, and learned to use VSCODE. | . Week #1 | Intro Python, Jupyter, Fastpages | Made a quiz using python, customized front page, created a productive blog, Bash tools check. | . Week #2 | Data Abstraction | Temporarily changed remote theme, changed to pink mode, created and edited new pages, using python to make a quiz that stores lists, and coding a python for loop. | . Week #3 | Creative Development | Created a quiz using code.org and blogged about experience and planning. | .",
          "url": "https://clairehzhao.github.io/claire/progress/",
          "relUrl": "/progress/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://clairehzhao.github.io/claire/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}